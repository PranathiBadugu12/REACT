31	What is the difference between createElement and cloneElement?
createElement is what JSX gets compiled to and is what React uses to create React Elements (object representations of some UI). cloneElement is used to clone an element and pass it new props.


32	What is Lifting State Up in React?
Often there will be a need to share state between different components. The common approach to share state between two components is to move the state to common parent of the two components. This approach is called as lifting state up in React.js


33	What are the different phases of component lifecycle?
Mounting
Updating
Unmounting


34	What are the lifecycle methods of React?
componentWillMount 
componentDidMount 
componentWillReceiveProps 
shouldComponentUpdate 
componentWillUpdate 
componentDidUpdate 
componentWillUnmount 


35	What are Higher-Order components?
Higher Order Component (HOC) is wrapping around "normal" component and provide additional data input. It is actually a function that takes one component and returns another component that wraps the original one.


36	How to create props proxy for HOC component?
function HOC(WrappedComponent) {
  return class Test extends Component {
    render() {
      const newProps = {
        title: 'New Header',
        footer: false,
        showFeatureX: false,
        showFeatureY: true
      };

      return <WrappedComponent {...this.props} {...newProps} />
    }
  }
}




37	What is context?
Context provides a way to pass data through the component tree without having to pass props down manually at every level


38	What is children prop?
this.props.children is used to display whatever you include between the opening and closing tags when invoking a component.
Example:
const Picture = (props) => {
  return (
    <div>
      <img src={props.src}/>
      {props.children}
    </div>
  )
}
//App.js
render () {
  return (
    <div className='container'>
      <Picture key={picture.id} src={picture.src}>
          //what is placed here is passed as props.children  
      </Picture>
    </div>
  )
}



39	How to write comments in React?
{/* A JSX comment */}
{/* 
  Multi
  line
  comment
*/}  


40	What is the purpose of using super constructor with props argument?
When you extend Component, you are inheriting this.props.So if you do not call super(props) in constructor, then this.props will be undefined inside the constructor function. The constructor for a React component is called before it is mounted. When implementing the constructor for a React.Component subclass, you should call super(props) before any other statement.


41	What is reconciliation?
Reconciliation is the process through which React updates the DOM. When a component's state changes, React has to calculate if it is necessary to update the DOM. It does this by creating a virtual DOM and comparing it with the current DOM. In this context, the virtual DOM will contain the new state of the component.


42	How to set state with a dynamic key name?
When you need to handle multiple controlled input elements, you can add a name attribute to each element and let the handler function choose what to do based on the value of event.target.name.
For example:
inputChangeHandler(event) {
  this.setState({ [event.target.name]: event.target.value });
}



43	What would be the common mistake of function being called every time the component renders?
You need to make sure that function is not being called while passing the function as a parameter.
render() {
  // Wrong: handleClick is called instead of passed as a reference!
  return <button onClick={this.handleClick()}>{'Click Me'}</button>
}
Instead, pass the function itself without parenthesis:
render() {
  // Correct: handleClick is passed as a reference!
  return <button onClick={this.handleClick}>{'Click Me'}</button>
}


44	Is lazy function supports named exports?
lazy function supports only default expports not named exports.


45	Why React uses className over class attribute?
class is a keyword in javascript and JSX is an extension of javascript. That's the principal reason why React uses className instead of class


46	What are fragments?
A common pattern in React is for a component to return multiple elements. Fragments let you group a list of children without adding extra nodes to the DOM.


47	Why fragments are better than container divs?
It’s a bit faster and has less memory usage (no need to create an extra DOM node).
Some CSS mechanisms like Flexbox and CSS Grid have a special parent-child relationship, and adding divs in the middle makes it hard to keep the desired layout while extracting logical components.



48	What are portals in React?
Portals provide a first-class way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.
ReactDOM.createPortal(child, container)


49	What are stateless components?
A stateless component is just a plain javascript function which takes props as an argument and returns a react element.
const Hello = ({ name }) => (<div>Hello, {name}!</div>);

50	What are stateful components?
Stateful components are always class components.Stateful components have a state that gets initialized in the constructor. 

// Here is an excerpt from the counter example
constructor(props) {
  super(props);
  this.state = { count: 0 };
}

51	How to apply validation on props in React?
App.propTypes is used for props validation. If some of the props aren't using the correct type that we assigned, we will get a console warning. After we specify validation patterns, we will set App.defaultProps.

52	What are the advantages of React?
Reusable Components
The Virtual DOM
Great Developer Tools
Easier to Write with JSX


53	What are the limitations of React?
Learning curve. Being not full-featured framework it is requered in-depth knowledge for integration user interface free library into MVC framework.
View-orientedness is one of the cons of ReactJS. It should be found 'Model' and 'Controller' to resolve 'View' problem.
Not using isomorphic approach to exploit application leads to search engines indexing problems.
Lots of developers dislike JSX React’s documentation, manuals are difficult for newcomers’ understanding.
React’s large size library.



54	What are error boundaries in React v16
The error boundary mechanism helps to show meaningful error message to user on production instead of showing any programming language error.
<ErrorBoundary>
   <User/>
</ErrorBoundary>



55	How error boundaries handled in React v15?
import React, {Component} from 'react';
class ErrorBoundary extends Component{
   state={
      isErrorOccured:false,
      errorMessage:''
   }
   componentDidCatch=(error,info)=>{
      this.setState({isErrorOccured:true,errorMessage:error});
   }
   render(){
      if(this.state.isErrorOccured){
         return <p>Something went wrong</p>
      }else{
         return <div>{this.props.children}</div>
      }
   }
}
export default ErrorBoundary;


56	What are the recommended ways for static type checking?
Static type checkers like Flow and TypeScript identify certain types of problems before you even run your code. They can also improve developer workflow by adding features like auto-completion.


57	What is the use of react-dom package?
ReactDOM is a package that provides DOM specific methods that can be used at the top level of a web app to enable an efficient way of managing DOM elements of the web page. 


58	What is the purpose of render method of react-dom?
This function is used to render a single React Component or several Components wrapped together in a Component or a div element.


59	What is ReactDOMServer?

60	How to use InnerHtml in React?
61	How to use styles in React?
62	How events are different in React?
63	What will happen if you use setState in constructor?
64	What is the impact of indexes as keys?
65	Is it good to use setState() in componentWillMount() method?
66	What will happen if you use props in initial state?
67	How do you conditionally render components?
68	Why we need to be careful when spreading props on DOM elements??
69	How you use decorators in React?
70	How do you memoize a component?
71	How you implement Server-Side Rendering or SSR?
72	How to enable production mode in React?
73	What is CRA and its benefits?
74	What is the lifecycle methods order in mounting?
75	What are the lifecycle methods going to be deprecated in React v16?
76	What is the purpose of getDerivedStateFromProps() lifecycle method?
77	What is the purpose of getSnapshotBeforeUpdate() lifecycle method?
78	Do Hooks replace render props and higher order components?
79	What is the recommended way for naming components?
80	What is the recommended ordering of methods in component class?
81	What is a switching component?
82	Why we need to pass a function to setState()?
83	What is strict mode in React?
84	What are React Mixins?
85	Why is isMounted() an anti-pattern and what is the proper solution?
86	What are the Pointer Events supported in React?
87	Why should component names start with capital letter?
88	Are custom DOM attributes supported in React v16?
89	What is the difference between constructor and getInitialState?
90	Can you force a component to re-render without calling setState?
91	What is the difference between super() and super(props) in React using ES6 classes?
92	How to loop inside JSX?
93	How do you access props in attribute quotes?
94	What is React PropType array with shape?
95	How to conditionally apply class attributes?
96	What is the difference between React and ReactDOM?
97	Why ReactDOM is separated from React?
98	How to use React label element?
99	How to combine multiple inline style objects?
100	How to re-render the view when the browser is resized?
101	What is the difference between setState and replaceState methods?
102	How to listen to state changes?
103	What is the recommended approach of removing an array element in react state?
104	Is it possible to use React without rendering HTML?
105	How to pretty print JSON with React?
106	Why you can't update props in React?
107	How to focus an input element on page load?
108	What are the possible ways of updating objects in state?
110	How can we find the version of React at runtime in the browser?
111	What are the approaches to include polyfills in your create-react-app?
112	How to use https instead of http in create-react-app?
113	How to avoid using relative path imports in create-react-app?
114	How to add Google Analytics for react-router?
115	How to update a component every second?
116	How do you apply vendor prefixes to inline styles in React?
117	How to import and export components using react and ES6?
118	What are the exceptions on React component naming?
119	Why is a component constructor called only once?
120	How to define constants in React?
121	How to programmatically trigger click event in React?
122	Is it possible to use async/await in plain React?
123	What are the common folder structures for React?
124	What are the popular packages for animation?
125	What is the benefit of styles modules?
126	What are the popular React-specific linters?
127	How to make AJAX call and In which component lifecycle methods should I make an AJAX call?
128	What are render props?
React Router
129	What is React Router?
130	How React Router is different from history library?
131	What are the <Router> components of React Router v4?
132	What is the purpose of push and replace methods of history?
133	How do you programmatically navigate using React router v4?
134	How to get query parameters in React Router v4
135	Why you get "Router may have only one child element" warning?
136	How to pass params to history.push method in React Router v4?
137	How to implement default or NotFound page?
138	How to get history on React Router v4?
139	How to perform automatic redirect after login?
React Internationalization
140	What is React-Intl?
141	What are the main features of React Intl?
142	What are the two ways of formatting in React Intl?
143	How to use FormattedMessage as placeholder using React Intl?
144	How to access current locale with React Intl
145	How to format date using React Intl?
React Testing
146	What is Shallow Renderer in React testing?
147	What is TestRenderer package in React?
148	What is the purpose of ReactTestUtils package?
149	What is Jest?
150	What are the advantages of Jest over Jasmine?
151	Give a simple example of Jest test case
React Redux
152	What is Flux?
153	What is Redux?
154	What are the core principles of Redux?
155	What are the downsides of Redux compared to Flux?
156	What is the difference between mapStateToProps() and mapDispatchToProps()?
157	Can I dispatch an action in reducer?
158	How to access Redux store outside a component?
159	What are the drawbacks of MVW pattern
160	Are there any similarities between Redux and RxJS?
161	How to dispatch an action on load?
162	How to use connect from React Redux?
163	How to reset state in Redux?
164	Whats the purpose of at symbol in the redux connect decorator?
165	What is the difference between React context and React Redux?
166	Why are Redux state functions called reducers?
167	How to make AJAX request in Redux?
168	Should I keep all component's state in Redux store?
169	What is the proper way to access Redux store?
170	What is the difference between component and container in React Redux?
171	What is the purpose of the constants in Redux?
172	What are the different ways to write mapDispatchToProps()?
173	What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?
174	How to structure Redux top level directories?
175	What is redux-saga?
176	What is the mental model of redux-saga?
177	What are the differences between call and put in redux-saga
178	What is Redux Thunk?
179	What are the differences between redux-saga and redux-thunk
180	What is Redux DevTools?
181	What are the features of Redux DevTools?
182	What are Redux selectors and Why to use them?
183	What is Redux Form?
184	What are the main features of Redux Form?
185	How to add multiple middlewares to Redux?
186	How to set initial state in Redux?
187	How Relay is different from Redux?
188	What is an action in Redux?
React Native
188	What is the difference between React Native and React?
189	How to test React Native apps?
190	How to do logging in React Native?
191	How to debug your React Native?
React supported libraries and Integration
192	What is reselect and how it works?
193	What is Flow?
194	What is the difference between Flow and PropTypes?
195	How to use font-awesome icons in React?
196	What is React Dev Tools?
197	Why is DevTools not loading in Chrome for local files?
198	How to use Polymer in React?
199	What are the advantages of React over Vue.js?
200	What is the difference between React and Angular?
